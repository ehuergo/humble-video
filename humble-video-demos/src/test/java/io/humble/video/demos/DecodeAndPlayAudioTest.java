/*******************************************************************************
 * Copyright (c) 2014, Art Clarke.  All rights reserved.
 *  
 * This file is part of Humble-Video.
 *
 * Humble-Video is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Humble-Video is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Humble-Video.  If not, see <http://www.gnu.org/licenses/>.
 *******************************************************************************/
package io.humble.video.demos;

import java.io.File;
import java.io.IOException;
import java.net.URL;

import javax.sound.sampled.LineUnavailableException;

import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author aclarke
 *
 */
public class DecodeAndPlayAudioTest {
  
  static private final Logger log = LoggerFactory.getLogger(DecodeAndPlayAudioTest.class);
  
  /**
   * Simple test to make sure no exceptions are generated by {@link #GetContainerInfo.main()}.
   * 
   * You should hand-verify the printed results.
   */
  @Test
  public void testMain() throws InterruptedException, IOException {
    final URL s = this.getClass().getResource("/ucl_h264_aac.mp4");
    final String f = new File(s.getPath()).getPath();
    final String[] args = new String[]{f};
    
    try {
      DecodeAndPlayAudio.main(args);
    } catch (LineUnavailableException e) {
      // When running in headless/server systems, we sometimes cannot get sound. So we 
      // don't fail then.
      log.error("Could not open line to play audio: {}", e);
    }
  }

}
